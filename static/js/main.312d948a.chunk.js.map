{"version":3,"sources":["assets/gifs/tenor.gif","assets/sounds/jingleBells.mp3","components/TextAnimation/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TextAnimation","className","useStyles","makeStyles","card","marginLeft","minWidth","maxWidth","minHeight","backgroundColor","title","fontSize","fontFamily","body","App","useEffect","console","log","MusicaNatal","document","getElementsByClassName","play","Card","id","variant","elevation","CardContent","Divider","src","HoHoHo","alt","flakes","index","push","renderFlakes","loop","autoPlay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iRAAe,G,MAAA,IAA0B,mCCA1B,MAA0B,wCCU1BA,G,MAPiB,WAC9B,OACE,qBAAKC,UAAU,oBCIbC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,WAAY,MACZC,SAAU,IACVC,SAAU,IACVC,UAAW,IACXC,gBAAiB,eAEnBC,MAAO,CACLC,SAAU,GACVC,WAAY,mBAEdC,KAAM,CACJD,WAAY,0BACZD,SAAU,WA6CCG,EAzCO,WAEJZ,IAEhBa,qBAAU,WACRC,QAAQC,IAAIC,GACsBC,SAASC,uBAAuB,iBAAiB,GAC3EC,SACP,IAUH,OACE,sBAAKpB,UAAU,MAAf,UACE,cAACqB,EAAA,EAAD,CAAMC,GAAG,YAAYtB,UAAU,OAAOuB,QAAQ,YAAYC,UAAW,GAArE,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAASH,QAAQ,WACjB,cAAC,EAAD,IACA,cAACG,EAAA,EAAD,CAASH,QAAQ,WACjB,qBAAKI,IAAKC,EAAQC,IAAI,SAAS7B,UAAU,QACzC,cAAC0B,EAAA,EAAD,CAASH,QAAQ,gBAGrB,qBAAKvB,UAAU,aAAf,SAnBiB,WAEnB,IADA,IAAM8B,EAAS,GACNC,EAAQ,EAAGA,EAXJ,IAWuBA,IACrCD,EAAOE,KAAK,qBAAiBhC,UAAU,cAAjB+B,IAExB,OAAOD,EAeFG,KAEH,8BACE,uBAAOjC,UAAU,gBAAgBkC,MAAI,EAACC,UAAQ,EAA9C,SACE,wBAAQR,IAAKV,YC/CRmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,SAM1BZ,M","file":"static/js/main.312d948a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tenor.ec070769.gif\";","export default __webpack_public_path__ + \"static/media/jingleBells.933827ab.mp3\";","import React from 'react';\nimport './style.scss';\n\nconst TextAnimation: React.FC = () => {\n  return (\n    <div className=\"TextAnimation\">\n    </div>\n  );\n}\n\nexport default TextAnimation;\n","import { Card, CardContent, Divider, makeStyles } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport './App.scss';\n\nimport HoHoHo from './assets/gifs/tenor.gif';\nimport MusicaNatal from './assets/sounds/jingleBells.mp3';\n\nimport TextAnimation from './components/TextAnimation';\n\nconst useStyles = makeStyles({\n  card: {\n    marginLeft: '10%',\n    minWidth: 500,\n    maxWidth: 500,\n    minHeight: 500,\n    backgroundColor: 'transparent',\n  },\n  title: {\n    fontSize: 28,\n    fontFamily: 'Langar, cursive',\n  },\n  body: {\n    fontFamily: 'Dancing Script, cursive',\n    fontSize: '1.2em',\n  },\n});\n\nconst App: React.FC = () => {\n  const numFlakes = 500;\n  const classes = useStyles();\n\n  useEffect(() => {\n    console.log(MusicaNatal);\n    const audioEl: HTMLAudioElement = document.getElementsByClassName(\"audio-element\")[0] as HTMLAudioElement;\n    audioEl.play();\n  }, [])\n\n  const renderFlakes = () => {\n    const flakes = [];\n    for (let index = 0; index < numFlakes; index++) {\n      flakes.push(<div key={index} className=\"snow-flake\"></div>);\n    }\n    return flakes;\n  }\n\n  return (\n    <div className=\"App\">\n      <Card id=\"card-back\" className=\"card\" variant=\"elevation\" elevation={10}>\n        <CardContent>\n          <Divider variant=\"middle\"/>\n          <TextAnimation></TextAnimation>\n          <Divider variant=\"middle\"/>\n          <img src={HoHoHo} alt=\"HoHoHo\" className=\"img\"/>\n          <Divider variant=\"middle\"/>\n        </CardContent>\n      </Card>\n      <div className=\"snowflakes\">\n        {renderFlakes()}\n      </div>\n      <div>\n        <audio className=\"audio-element\" loop autoPlay>\n          <source src={MusicaNatal}></source>\n        </audio>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}